stages:
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

image: docker:latest

services:
  - docker:dind

before_script:
  - apk add --no-cache docker-cli
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build_front:
  stage: build
  script:
    - docker build -t wss-front ./front
  only:
    - develop
    - master

build_back:
  stage: build
  script:
    - docker build -t wss-back ./back
  only:
    - develop
    - master

build_userdb:
  stage: build
  script:
    - docker build -t wss-userdb ./userdb
  only:
    - develop
    - master

build_datadb:
  stage: build
  script:
    - docker build -t wss-datadb ./datadb
  only:
    - develop
    - master

test_front:
  stage: test
  script:
    - docker run -d --name wss-front wss-front
    - docker exec wss-front npm start
  only:
    - develop
    - master

test_back:
  stage: test
  script:
    - docker run -d --name wss-back wss-back
    - docker exec wss-back npm start
  only:
    - develop
    - master

test_db:
  stage: test
  script:
    - docker run -d --name wss-userdb wss-userdb
    - docker run -d --name wss-datadb wss-datadb
    - docker exec wss-userdb mysqlcheck --all-databases
    - docker exec wss-datadb mysqlcheck --all-databases
  only:
    - develop
    - master

deploy:
  stage: deploy
  script:
    - docker run -d --name wss-front wss-front
    - docker run -d --name wss-back wss-back
    - docker run -d --name wss-userdb wss-userdb
    - docker run -d --name wss-datadb wss-datadb
  only:
    - master
// admin 데이터베이스에서 시작
use admin;

// 관리자 사용자 생성
db.createUser({
    user: "${DB_USER}",
    pwd: "${DB_PASSWORD}",
    roles: [
        { role: "userAdminAnyDatabase", db: "admin" },
        { role: "dbAdminAnyDatabase", db: "admin" },
        { role: "readWriteAnyDatabase", db: "admin" }
    ]
});

// datadb로 전환
use ${DB_NAME};

// datadb 전용 사용자 생성
db.createUser({
    user: "${DB_USER}",
    pwd: "${DB_PASSWORD}",
    roles: [
        { role: "readWrite", db: "${DB_NAME}" },
        { role: "dbAdmin", db: "${DB_NAME}" }
    ]
});

// USER 컬렉션
db.createCollection("USER", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["user_id", "user_password", "user_name", "user_email"],
            properties: {
                user_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                user_password: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                user_name: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                user_gender: {
                    bsonType: "string",
                    description: "must be a string"
                },
                user_birth: {
                    bsonType: "date",
                    description: "must be a date"
                },
                user_email: {
                    bsonType: "string",
                    pattern: "^.+@.+\..+$",
                    description: "must be a string and match the regular expression pattern"
                },
                user_phone: {
                    bsonType: "string",
                    description: "must be a string"
                },
                user_created_at: {
                    bsonType: "date",
                    description: "must be a date"
                },
                user_last_login: {
                    bsonType: "date",
                    description: "must be a date"
                }
            }
        }
    }
});

// USER_ACHIEVEMENT 컬렉션
db.createCollection("USER_ACHIEVEMENT", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["user_id", "user_date"],
            properties: {
                user_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                user_date: {
                    bsonType: "date",
                    description: "must be a date and is required"
                },
                user_height: {
                    bsonType: "double",
                    description: "must be a number"
                },
                user_weight: {
                    bsonType: "double",
                    description: "must be a number"
                }
            }
        }
    }
});

// ROUTINE 컬렉션
db.createCollection("ROUTINE", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["routine_id", "user_id", "routine_name"],
            properties: {
                routine_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                user_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                routine_name: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                routine_created_at: {
                    bsonType: "date",
                    description: "must be a date"
                }
            }
        }
    }
});

// ROUTINE_COMPONENT 컬렉션
db.createCollection("ROUTINE_COMPONENT", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["component_id", "routine_id", "video_id"],
            properties: {
                component_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                routine_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                video_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                component_sets: {
                    bsonType: "int",
                    description: "must be an integer"
                }
            }
        }
    }
});

// VIDEO 컬렉션
db.createCollection("VIDEO", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["video_id", "video_title", "video_url"],
            properties: {
                video_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                video_title: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                video_description: {
                    bsonType: "string",
                    description: "must be a string"
                },
                video_tag: {
                    bsonType: "string",
                    description: "must be a string"
                },
                video_url: {
                    bsonType: "string",
                    description: "must be a string and is required"
                }
            }
        }
    }
});

// MUSCLE 컬렉션
db.createCollection("MUSCLE", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["muscle_id", "muscle_name"],
            properties: {
                muscle_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                muscle_name: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                muscle_info: {
                    bsonType: "string",
                    description: "must be a string"
                },
                muscle_tag: {
                    bsonType: "string",
                    description: "must be a string"
                }
            }
        }
    }
});

// FOOD_100G 컬렉션
db.createCollection("FOOD_100G", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["food_id", "food_name"],
            properties: {
                food_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                food_name: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                energy_kcal: {
                    bsonType: "double",
                    description: "must be a number"
                },
                carbohydrate: {
                    bsonType: "double",
                    description: "must be a number"
                },
                protein: {
                    bsonType: "double",
                    description: "must be a number"
                },
                fat: {
                    bsonType: "double",
                    description: "must be a number"
                },
                dietary_fiber: {
                    bsonType: "double",
                    description: "must be a number"
                },
                sugar: {
                    bsonType: "double",
                    description: "must be a number"
                },
                salt: {
                    bsonType: "double",
                    description: "must be a number"
                },
                vitamin: {
                    bsonType: "string",
                    description: "must be a string"
                },
                mineral: {
                    bsonType: "string",
                    description: "must be a string"
                }
            }
        }
    }
});

// HABIT_TRACKER 컬렉션
db.createCollection("HABIT_TRACKER", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["habit_id", "video_id"],
            properties: {
                habit_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                video_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                goal_weekly: {
                    bsonType: "int",
                    description: "must be an integer"
                },
                goal_daily: {
                    bsonType: "int",
                    description: "must be an integer"
                },
                goal_daily_time: {
                    bsonType: "int",
                    description: "must be an integer"
                }
            }
        }
    }
});

// USER_DIET 컬렉션
db.createCollection("USER_DIET", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["diet_id", "user_id", "diet_date"],
            properties: {
                diet_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                user_id: {
                    bsonType: "string",
                    description: "must be a string and is required"
                },
                diet_date: {
                    bsonType: "date",
                    description: "must be a date and is required"
                },
                mealtime: {
                    bsonType: "string",
                    description: "must be a string"
                },
                food: {
                    bsonType: "string",
                    description: "must be a string"
                }
            }
        }
    }
});
